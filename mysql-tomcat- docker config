*****////////////////download mysql image and create docker container//////////////////////////////

to get docker mysql image->      docker pull mysql
create new docker name and password->   docker run --name=anyName(posdocker) -e MYSQL_ROOT_PASSWORD=anyPassword -d mysql 
to log into docker container(enter docker name)->             docker exec -i -t posdocker(newly create container name) /bin/bash
now we are in docker container then log into my sql ->     mysql -u root -p



//////////////////////////deploy jar in tomcat///////////////////

http://codeomitted.com/deploy-war-file-to-docker-image/

Letâ€™s get started.

Step 1) Prepare a Dockerfile
Step 2) Run build custom image base on docker hub tomcat image
Step 3) Start docker containers

 
_________________________________________________
Dockerfile
_________________________________________________
Prepare a Dockerfile with the following content.
Copy the war file from out from the target folder.
# Pull base image
From tomcat:8-jre8

# Maintainer
MAINTAINER "Ranga <lankathilakamrp@gmail.com">

# Copy to images tomcat path
ADD sp-pos.war /usr/local/tomcat/webapps/
 
_________________________________________________

Build docker image
Now run the follow command to docker image name webserver with your Dockerfile  in current directory. First time to build docker image will require download and may take longer times.

docker build -t webserver .<-current root



Run docker container
Run docker container with interactive mode.

docker run -it --rm -p 8080:8080 --name dockerwar webserver




/////////////////////////////////////////////pom

scope must be provided,because we provide tomcat separately

                <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>



//////////////////////////////////psvm

@SpringBootApplication
public class Application extends SpringBootServletInitializer {
	
	@Override
	   protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
	       return application.sources(Application.class);
	   }

    public static void main(String[] args) {
        SpringApplication.run(Application.class,args);
    }

}


///////////////////////////////////application.properties

spring.datasource.url=jdbc:mysql://172.17.0.2:3306/POSSpringBoot?createDatabaseIfNotExist=true

  this ip is docker ip address
  sts->prespective->docker tooling->(posdoker)doker name----r/c-->show in-> properties


/////////////////////////////////postman url

http://localhost:8080/sb-pos/api/v1/customers

befor calling to request mapping war name should indicate






/////////////////////////////////////////
_________________________________________
|||||||||||||||||||||||||||||||||||||||||
docker compose 
_________________________________________

docker-compose build
docker-compose stop
docker-compose up imageName1
docker-compose up imageName2

----------------------------------------
_________________________________________



